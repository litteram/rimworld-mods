<?xml version="1.0" encoding="utf-8"?>
<Patch>
  <Operation Class="XmlExtensions.FindMod">
    <mods>
      <li>Medieval Overhaul</li>
    </mods>
    <logic>and</logic>
    <caseTrue>

      <li Class="XmlExtensions.OptionalPatch">
        <modId>zenlor.MOTweaks</modId>
        <key>mot-mineshaft-gems</key>
        <defaultValue>true</defaultValue>
        <caseTrue>

          <li Class="XmlExtensions.UseSettings">
            <modId>zenlor.MOTweaks</modId>
            <key>mot-mineshaft-gems-work</key>
            <defaultValue>1600</defaultValue>
            <apply>

              <Operation Class="PatchOperationAdd">
                <xpath>/Defs</xpath>
                <value>
                  <RecipeDef ParentName="DankPyon_MineShaftBase">
                    <defName>DankPyon_MakeOre_Emerald</defName>
                    <description>Mine deep down underground to obtain and polish a single emerald</description>
                    <workAmount>{mot-mineshaft-gems-work}</workAmount>
                    <label>mine an emerald</label>
                    <jobString>Mining 1 emerald.</jobString>
                    <products>
                      <DankPyon_Emerald>1</DankPyon_Emerald>
                    </products>
                  </RecipeDef>

                  <RecipeDef ParentName="DankPyon_MineShaftBase">
                    <defName>DankPyon_MakeOre_Sapphire</defName>
                    <description>Mine deep down underground to obtain and polish a single sapphire</description>
                    <workAmount>{mot-mineshaft-gems-work}</workAmount>
                    <label>mine a sapphire</label>
                    <jobString>Mining 1 sapphire.</jobString>
                    <products>
                      <DankPyon_Sapphire>1</DankPyon_Sapphire>
                    </products>
                  </RecipeDef>

                  <RecipeDef ParentName="DankPyon_MineShaftBase">
                    <defName>DankPyon_MakeOre_Onyx</defName>
                    <description>Mine deep down underground to obtain and polish a single onyx</description>
                    <workAmount>{mot-mineshaft-gems-work}</workAmount>
                    <label>mine an onyx</label>
                    <jobString>Mining 1 onyx.</jobString>
                    <products>
                      <DankPyon_Onyx>1</DankPyon_Onyx>
                    </products>
                  </RecipeDef>

                  <RecipeDef ParentName="DankPyon_MineShaftBase">
                    <defName>DankPyon_MakeOre_Amber</defName>
                    <description>Mine deep down underground to obtain and polish a single amber</description>
                    <workAmount>{mot-mineshaft-gems-work}</workAmount>
                    <label>mine an amber</label>
                    <jobString>Mining 1 amber.</jobString>
                    <products>
                      <DankPyon_Amber>1</DankPyon_Amber>
                    </products>
                  </RecipeDef>

                  <RecipeDef ParentName="DankPyon_MineShaftBase">
                    <defName>DankPyon_MakeOre_Citrine</defName>
                    <description>Mine deep down underground to obtain and polish a single citrine</description>
                    <workAmount>{mot-mineshaft-gems-work}</workAmount>
                    <label>mine a citrine</label>
                    <jobString>Mining 1 citrine.</jobString>
                    <products>
                      <DankPyon_Citrine>1</DankPyon_Citrine>
                    </products>
                  </RecipeDef>

                  <RecipeDef ParentName="DankPyon_MineShaftBase">
                    <defName>DankPyon_MakeOre_Ruby</defName>
                    <description>Mine deep down underground to obtain and polish a single ruby</description>
                    <workAmount>{mot-mineshaft-gems-work}</workAmount>
                    <label>mine a ruby</label>
                    <jobString>Mining 1 ruby.</jobString>
                    <products>
                      <DankPyon_Ruby>1</DankPyon_Ruby>
                    </products>
                  </RecipeDef>

                </value>
              </Operation>

            </apply>
          </li>

        </caseTrue>
      </li>

    </caseTrue>
  </Operation>
</Patch>
